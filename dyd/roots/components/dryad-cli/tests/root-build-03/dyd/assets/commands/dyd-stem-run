#!/usr/bin/env bash

#
# turn this on to debug script
# set -x

#
# abort on error
# https://sipb.mit.edu/doc/safe-shell/
set -euf -o pipefail

SRC_DIR=$DYD_STEM
TEMP_DIR=''

# import assertion functions
. $SRC_DIR/dyd/assets/assertions.sh

_setup() {
	#
	# make a temporary working directory
	# this command is linux / osx agnostic
	# https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
	# echo "\[INFO\] creating temporary working directory" 1>&2;
	TEMP_DIR=''
	TEMP_DIR=`mktemp -d 2>/dev/null || mktemp -d -t 'build-dir'`
}

_prepare() {
	# echo "[INFO] creating garden" 1>&2;

	# copy the sample garden to the working directory
	cp -R "$SRC_DIR/dyd/assets/sample-garden/." "$TEMP_DIR" 
	chmod -R 755 "$TEMP_DIR"

	:;
}

_test() {
	(cd "$TEMP_DIR" && dryad root build dyd/roots/root-01 --log-level="$DYD_LOG_LEVEL") 1>&2;
}

_verify() {
	assert_directory_exists "$TEMP_DIR/dyd"
	assert_file_content_equals "$TEMP_DIR/dyd/type" "garden"

	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01"
	assert_file_content_equals "$TEMP_DIR/dyd/sprouts/root-01/dyd/type" "stem"

	# test-1
	assert_file_content_equals "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-1/test-file-01" "test-file-01"
	assert_file_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-1/.dyd-ignore"

	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-1/test-dir-01/test-file-02"
	assert_directory_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-1/test-dir-01"

	# test-2
	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-2/test-dir-01"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-2/test-file-01"

	assert_file_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-2/test-dir-01/test-file-01"

	# test-3
	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-3/test-dir-01"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-3/test-file-01"

	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-3/test-dir-01/test-file-01"

	# test-4
	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-4/test-dir-01"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-4/test-file-01"

	assert_file_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-4/test-dir-01/test-file-01"

	# test-5
	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-5/test-dir-01"
	assert_file_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-5/test-file-01"

	assert_file_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-5/test-dir-01/test-file-01"

	# test-6
	assert_directory_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-6/test-dir-01"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-6/test-file-01"

	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-6/test-dir-01/test-file-01"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-6/test-dir-01/test-file-02"
	assert_file_not_exists "$TEMP_DIR/dyd/sprouts/root-01/dyd/assets/test-6/test-dir-01/test-file-03"
	:;
}

_teardown() {
	# echo "\[INFO\] tearing down fixtures" 1>&2;
	if [ -d "$TEMP_DIR" ]; then
		chmod -R 755 "$TEMP_DIR"
		rm -rf "$TEMP_DIR"
	fi
}

trap _teardown ERR EXIT
_setup
_prepare
_test
_verify
